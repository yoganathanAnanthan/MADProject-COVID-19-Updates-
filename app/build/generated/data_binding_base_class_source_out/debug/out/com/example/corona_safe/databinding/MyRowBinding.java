// Generated by view binder compiler. Do not edit!
package com.example.corona_safe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.corona_safe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MyRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView DaysTxt;

  @NonNull
  public final TextView DistrictTxt;

  @NonNull
  public final TextView TierTxt;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView districtIdTxt;

  @NonNull
  public final LinearLayout mainLayout;

  private MyRowBinding(@NonNull LinearLayout rootView, @NonNull TextView DaysTxt,
      @NonNull TextView DistrictTxt, @NonNull TextView TierTxt, @NonNull CardView cardView,
      @NonNull TextView districtIdTxt, @NonNull LinearLayout mainLayout) {
    this.rootView = rootView;
    this.DaysTxt = DaysTxt;
    this.DistrictTxt = DistrictTxt;
    this.TierTxt = TierTxt;
    this.cardView = cardView;
    this.districtIdTxt = districtIdTxt;
    this.mainLayout = mainLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MyRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MyRowBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.my_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MyRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Days_txt;
      TextView DaysTxt = rootView.findViewById(id);
      if (DaysTxt == null) {
        break missingId;
      }

      id = R.id.District_txt;
      TextView DistrictTxt = rootView.findViewById(id);
      if (DistrictTxt == null) {
        break missingId;
      }

      id = R.id.Tier_txt;
      TextView TierTxt = rootView.findViewById(id);
      if (TierTxt == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = rootView.findViewById(id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.district_id_txt;
      TextView districtIdTxt = rootView.findViewById(id);
      if (districtIdTxt == null) {
        break missingId;
      }

      LinearLayout mainLayout = (LinearLayout) rootView;

      return new MyRowBinding((LinearLayout) rootView, DaysTxt, DistrictTxt, TierTxt, cardView,
          districtIdTxt, mainLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
